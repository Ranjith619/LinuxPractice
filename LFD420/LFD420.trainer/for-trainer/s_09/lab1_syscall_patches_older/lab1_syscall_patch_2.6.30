Signed-off-by: Jerry Cooperstein <coop@linuxfoundation.com>

diff -Nur linux-2.6.30/arch/x86/include/asm/unistd_32.h linux-2.6.30_patched/arch/x86/include/asm/unistd_32.h
--- linux-2.6.30/arch/x86/include/asm/unistd_32.h	2009-06-09 22:05:27.000000000 -0500
+++ linux-2.6.30_patched/arch/x86/include/asm/unistd_32.h	2009-06-11 08:21:00.692208581 -0500
@@ -340,6 +340,7 @@
 #define __NR_inotify_init1	332
 #define __NR_preadv		333
 #define __NR_pwritev		334
+#define __NR_my_syscall 335
 
 #ifdef __KERNEL__
 
diff -Nur linux-2.6.30/arch/x86/include/asm/unistd_64.h linux-2.6.30_patched/arch/x86/include/asm/unistd_64.h
--- linux-2.6.30/arch/x86/include/asm/unistd_64.h	2009-06-09 22:05:27.000000000 -0500
+++ linux-2.6.30_patched/arch/x86/include/asm/unistd_64.h	2009-06-11 08:21:55.628083258 -0500
@@ -657,7 +657,8 @@
 __SYSCALL(__NR_preadv, sys_preadv)
 #define __NR_pwritev				296
 __SYSCALL(__NR_pwritev, sys_pwritev)
-
+#define __NR_my_syscall			297
+__SYSCALL(__NR_my_syscall, sys_my_syscall)
 
 #ifndef __NO_STUBS
 #define __ARCH_WANT_OLD_READDIR
diff -Nur linux-2.6.30/arch/x86/kernel/syscall_table_32.S linux-2.6.30_patched/arch/x86/kernel/syscall_table_32.S
--- linux-2.6.30/arch/x86/kernel/syscall_table_32.S	2009-06-09 22:05:27.000000000 -0500
+++ linux-2.6.30_patched/arch/x86/kernel/syscall_table_32.S	2009-06-11 08:23:07.759083280 -0500
@@ -334,3 +334,4 @@
 	.long sys_inotify_init1
 	.long sys_preadv
 	.long sys_pwritev
+	.long sys_my_syscall
diff -Nur linux-2.6.30/kernel/sys.c linux-2.6.30_patched/kernel/sys.c
--- linux-2.6.30/kernel/sys.c	2009-06-09 22:05:27.000000000 -0500
+++ linux-2.6.30_patched/kernel/sys.c	2009-06-11 08:23:50.457082889 -0500
@@ -1880,3 +1880,24 @@
 	return ret;
 }
 EXPORT_SYMBOL_GPL(orderly_poweroff);
+
+
+/* Adding a dynamical system call */
+
+struct my_sc_struct{
+    long (*fun) (unsigned long p1);
+}  my_sc = {NULL};
+EXPORT_SYMBOL(my_sc);
+
+/* for kernels before 2.6.29 use this
+   asmlinkage long sys_my_syscall(unsigned long p1)
+*/
+SYSCALL_DEFINE1(my_syscall, unsigned long, p1)
+{
+    struct my_sc_struct *s = (struct my_sc_struct *)&my_sc;
+    printk(KERN_INFO "Entering my_syscall with p1 = %ld at jiffies=%ld\n",
+	p1, jiffies);
+    if (!s || !s->fun)
+	return -ENOSYS;
+    return s->fun(p1);
+}
