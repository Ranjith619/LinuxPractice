Signed-off-by: Jerry Cooperstein <coop@linuxfoundation.com>

diff -Nur linux-2.6.36/arch/x86/include/asm/unistd_32.h linux-2.6.36_patched/arch/x86/include/asm/unistd_32.h
--- linux-2.6.36/arch/x86/include/asm/unistd_32.h	2010-10-20 15:30:22.000000000 -0500
+++ linux-2.6.36_patched/arch/x86/include/asm/unistd_32.h	2010-10-22 09:38:02.392582776 -0500
@@ -346,10 +346,11 @@
 #define __NR_fanotify_init	338
 #define __NR_fanotify_mark	339
 #define __NR_prlimit64		340
+#define __NR_my_syscall		341
 
 #ifdef __KERNEL__
 
-#define NR_syscalls 341
+#define NR_syscalls 342
 
 #define __ARCH_WANT_IPC_PARSE_VERSION
 #define __ARCH_WANT_OLD_READDIR
diff -Nur linux-2.6.36/arch/x86/include/asm/unistd_64.h linux-2.6.36_patched/arch/x86/include/asm/unistd_64.h
--- linux-2.6.36/arch/x86/include/asm/unistd_64.h	2010-10-20 15:30:22.000000000 -0500
+++ linux-2.6.36_patched/arch/x86/include/asm/unistd_64.h	2010-10-22 09:41:28.496326025 -0500
@@ -669,6 +669,8 @@
 __SYSCALL(__NR_fanotify_mark, sys_fanotify_mark)
 #define __NR_prlimit64				302
 __SYSCALL(__NR_prlimit64, sys_prlimit64)
+#define __NR_my_syscall				303
+__SYSCALL(__NR_my_syscall, sys_my_syscall)
 
 #ifndef __NO_STUBS
 #define __ARCH_WANT_OLD_READDIR
diff -Nur linux-2.6.36/arch/x86/kernel/syscall_table_32.S linux-2.6.36_patched/arch/x86/kernel/syscall_table_32.S
--- linux-2.6.36/arch/x86/kernel/syscall_table_32.S	2010-10-20 15:30:22.000000000 -0500
+++ linux-2.6.36_patched/arch/x86/kernel/syscall_table_32.S	2010-10-22 09:39:58.085183904 -0500
@@ -340,3 +340,4 @@
 	.long sys_fanotify_init
 	.long sys_fanotify_mark
 	.long sys_prlimit64		/* 340 */
+	.long sys_my_syscall		/* 341 */
diff -Nur linux-2.6.36/kernel/sys.c linux-2.6.36_patched/kernel/sys.c
--- linux-2.6.36/kernel/sys.c	2010-10-20 15:30:22.000000000 -0500
+++ linux-2.6.36_patched/kernel/sys.c	2010-10-22 10:03:45.461904001 -0500
@@ -1803,3 +1803,21 @@
 	return ret;
 }
 EXPORT_SYMBOL_GPL(orderly_poweroff);
+
+/* Adding a dynamical system call */
+
+struct my_sc_struct {
+	long (*fun) (unsigned long p1);
+} my_sc = {
+NULL};
+EXPORT_SYMBOL(my_sc);
+
+SYSCALL_DEFINE1(my_syscall, unsigned long, p1)
+{
+	struct my_sc_struct *s = (struct my_sc_struct *)&my_sc;
+	printk(KERN_INFO "Entering my_syscall with p1 = %ld at jiffies=%ld\n",
+	       p1, jiffies);
+	if (!s || !s->fun)
+		return -ENOSYS;
+	return s->fun(p1);
+}
